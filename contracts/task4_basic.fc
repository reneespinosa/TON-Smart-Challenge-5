#include "imports/stdlib.fc";

forall X -> tuple set_index_var(tuple t, X value, int position) asm "SETINDEXVAR";


;; at for accessing positions
;; . 46
;; ? 63
;; ! 33
;; X 88
;; S 83
;; E 69

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
}

int out_of_index(int n,int m ,int x ,int y)
{
    if(x < 0)
    {
        return 0;
    }
    if(x >= n)
    {
        return 0;
    }

    if(y < 0)
    {
        return 0;
    }

    if(y >= m)
    {
        return 0;
    }

    return -1;
}
 
int min_val(int x,int y)
{
    int a = x;
    
    if(a > y)
    {
        a = y;
    }

    return a;
}

tuple setval(tuple cmaze,int i ,int j, int val)
{
        tuple row = cmaze.at(i);
        row = row.set_index_var(val,j);
        return cmaze.set_index_var(row,i);
}

(int, int, int, tuple) solve(int n, int m, tuple maze) method_id
{


        tuple a = null();  
        return (-1,0,0,a); 
       
}


